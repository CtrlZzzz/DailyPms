@namespace DailyPmsSecuredClient.Components
@using ClientServices.Interfaces
@using DailyPmsShared
@inject ISchoolService SchoolService
@inject NavigationManager Navigation

@if (schoolSummaries == null)
{
    <MudProgressCircular Class="mt-8" Color="Color.Primary" Indeterminate="true" />
}
else
{
    <MudGrid Class="mt-8">
        @foreach (var school in schoolSummaries)
        {
            <MudItem xs="12" sm="6" md="4" lg="3">
                <MudCard Style="background-color: rgba(255, 255, 255, 0.5);">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h5">@school.Name</MudText>
                            <MudText Typo="Typo.subtitle1">@school.Moniker</MudText>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Default" OnClick="@((s) => OnEditClick(school))" />
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText Typo="Typo.body2">@school.Street</MudText>
                        <MudText Typo="Typo.body2">@school.PostalCode</MudText>
                        <MudText Typo="Typo.body2">@school.City</MudText>
                        <MudText Class="mt-4">@school.Phone</MudText>
                        <MudText>@school.Email</MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="@((s) => OnDetailsClick(school))">Détails</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        }
    </MudGrid>
}

@code {
    [Parameter]
    public Func<Task<IEnumerable<School>>> FetchData { get; set; }

    IEnumerable<School> schoolSummaries = new List<School>();

    protected override async Task OnInitializedAsync()
    {
        schoolSummaries = await FetchData.Invoke();
    }

    void OnDetailsClick(School selectedSchool)
    {
        Navigation.NavigateTo($"schoolDetail/{selectedSchool._id}");
    }
    void OnEditClick(School selectedSchool)
    {
        Navigation.NavigateTo($"editSchool/{selectedSchool.SchoolID}");
    }
}
