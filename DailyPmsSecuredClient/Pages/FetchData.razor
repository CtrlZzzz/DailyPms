@page "/fetchdata"
@using DailyPmsSecuredClient.Components
@inject HttpClient Http

<style>
    body {
        background-color: @CustomColors.TERTIARY;
        background-image: url(Images/bg_01.png);
        padding-left: 20px;
        padding-right: 20px;
    }
</style>

<MudPaper Elevation="0" Class=" py-2 mx-4 rounded-pill d-flex justify-center" Style="width: 255px; height: 60px; background-image: linear-gradient(90deg, #FBD27A, #FCF594);">
    <MudIcon Class="my-1 mr-2" Icon="@Icons.Material.Filled.Home"  Size="Size.Large" Style="color: #FFFFFF;" Align-content="Align.Center"/>
    <MudText  Style="font-size: 30px; font-weight: lighter; color: #FFFFFF;" Align="Align.Center">Fetch data</MudText>
</MudPaper>

<p>This component demonstrates fetching data from the server.</p>



@*@if (forecasts == null)
    {
        <p><em>Loading...</em></p>
        <MudButton Variant="Variant.Filled" Color="Color.Primary">Primary</MudButton>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Temp. (C)</th>
                    <th>Temp. (F)</th>
                    <th>Summary</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var forecast in forecasts)
                {
                    <tr>
                        <td>@forecast.Date.ToShortDateString()</td>
                        <td>@forecast.TemperatureC</td>
                        <td>@forecast.TemperatureF</td>
                        <td>@forecast.Summary</td>
                    </tr>
                }
            </tbody>
        </table>
    }*@

@code {
    @*private WeatherForecast[] forecasts;

        //protected override async Task OnInitializedAsync()
        //{
        //    forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
        //}

        public class WeatherForecast
        {
            public DateTime Date { get; set; }

            public int TemperatureC { get; set; }

            public string Summary { get; set; }

            public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
        }*@
}
